{"mappings":"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","sources":["src/index.js"],"sourcesContent":["import \"./styles.css\";\n\nconst app = document.getElementById(\"app\");\n\napp.innerHTML = `\n<div id=\"outer\" style=\"\">\n  <canvas id=\"canvas\" width=\"600\" height=\"600\" style=\"border: solid black 0px;\">\n    Your browser does not support canvas elements.\n  </canvas>\n  <div id=\"bottombar\">\n    <button id=\"modebutton\">Draw</button>\n    <button id=\"backgroundbutton\">Empty</button>\n    <input id=\"size\" type=\"number\" min=\"5\" max=\"50\" value=\"10\" step=\"5\" class=\"size\">\n    <input id=\"color\" type=\"color\"></button>\n  </div>\n</div id=\"outer\">\n<canvas id=\"pattern\" width=\"50\" height=\"50\" style=\"display: none; left: 50px;\"></canvas>\n`;\n\nvar ongoingTouches = [];\n\nvar usepattern = false;\nvar mode = 0;\nvar touchstart = [];\n/*var colorid = 0;\nvar colors = [\n  \"#000000\",\n  \"#888888\",\n  \"#ff0000\",\n  \"#ff8800\",\n  \"#ffff00\",\n  \"#008800\",\n  \"#00ff00\",\n  \"#00ffff\",\n  \"#0000ff\",\n  \"#8800ff\",\n  \"#ff00ff\",\n  \"#964b00\"\n];*/\n\nvar backgroundpattern = \"\";\n\nfunction makepattern() {\n  var el = document.getElementById(\"pattern\");\n  var ctx = el.getContext(\"2d\");\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, 50, 50);\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(1, 1, 48, 48);\n  backgroundpattern = ctx.createPattern(el, \"repeat\");\n}\n\nfunction clearCanvas() {\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  if (usepattern) {\n    ctx.fillStyle = backgroundpattern;\n    ctx.fillRect(0, 0, el.width, el.height);\n  } else {\n    ctx.clearRect(0, 0, el.width, el.height);\n  }\n}\n\nfunction colorForTouch(touch) {\n  let color;\n  color = document.getElementById(\"color\").value;\n  /*console.log(\n    \"color for touch with identifier \" + touch.identifier + \" = \" + color\n  );*/\n  return color;\n}\n\nfunction copyTouch({ identifier, pageX, pageY }) {\n  return { identifier, pageX, pageY };\n}\n\nfunction ongoingTouchIndexById(idToFind) {\n  for (var i = 0; i < ongoingTouches.length; i++) {\n    var id = ongoingTouches[i].identifier;\n\n    if (id === idToFind) {\n      return i;\n    }\n  }\n  return -1; // not found\n}\n\nfunction handleStart(evt) {\n  evt.preventDefault();\n  //console.log(\"touchstart.\");\n  var el = document.getElementById(\"canvas\");\n  if (el.width !== window.innerWidth || el.height !== window.innerHeight - 30) {\n    el.width = window.innerWidth.toString();\n    el.style.width = window.innerWidth;\n    el.height = (window.innerHeight - 30).toString();\n    el.style.height = window.innerHeight - 30;\n  }\n  //var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    //console.log(\"touchstart:\" + i + \"...\");\n    ongoingTouches.push(copyTouch(touches[i]));\n    //var color = colorForTouch(touches[i]);\n    touchstart[i] = touches[i];\n    /*\n    ctx.beginPath();\n    //ctx.arc(touches[i].pageX, touches[i].pageY, 4, 0, 2 * Math.PI, false); // a circle at the start\n    //ctx.fillStyle = color;\n    ctx.fill();\n    */\n    //console.log(\"touchstart:\" + i + \".\");\n  }\n}\n\nfunction handleMove(evt) {\n  evt.preventDefault();\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      //console.log(\"continuing touch \" + idx);\n      ctx.beginPath();\n      /*console.log(\n        \"ctx.moveTo(\" +\n          ongoingTouches[idx].pageX +\n          \", \" +\n          ongoingTouches[idx].pageY +\n          \");\"\n      );*/\n      /*console.log(\n        \"ctx.lineTo(\" + touches[i].pageX + \", \" + touches[i].pageY + \");\"\n      );*/\n      var widthvalue = document.getElementById(\"size\").value;\n      if (touches[i].force === 0) {\n        ctx.lineWidth = widthvalue;\n      } else {\n        ctx.lineWidth = touches[i].force * widthvalue;\n      }\n      ctx.strokeStyle = color;\n      ctx.lineCap = \"round\";\n      if (mode === 0) {\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      } else if (mode === 1) {\n        ctx.lineWidth = widthvalue * 2;\n        if (usepattern) {\n          ctx.strokeStyle = backgroundpattern;\n        } else {\n          ctx.strokeStyle = \"#ffffff\";\n        }\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      }\n\n      ongoingTouches.splice(idx, 1, copyTouch(touches[i])); // swap in the new touch record\n      //console.log(\".\");\n      /*} else {*/\n      //console.log(\"can't figure out which touch to continue\");\n    }\n  }\n}\n\nfunction handleEnd(evt) {\n  evt.preventDefault();\n  //console.log(\"touchend\");\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      ctx.lineWidth = 4;\n      ctx.fillStyle = color;\n      //ctx.fillStyle = backgroundpattern;\n      ctx.beginPath();\n      if (mode === 2) {\n        var radius = Math.sqrt(\n          Math.pow(touchstart[i].pageX - touches[i].pageX, 2) +\n            Math.pow(touchstart[i].pageY - touches[i].pageY, 2)\n        );\n        ctx.arc(\n          touchstart[i].pageX,\n          touchstart[i].pageY,\n          radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        ctx.stroke();\n      } else if (mode === 3) {\n        ctx.moveTo(touchstart[i].pageX, touchstart[i].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      }\n      //ctx.fillRect(touches[i].pageX - 4, touches[i].pageY - 4, 8, 8); // and a square at the end\n      ongoingTouches.splice(idx, 1); // remove it; we're done\n    } else {\n      //console.log(\"can't figure out which touch to end\");\n    }\n  }\n}\n\nfunction handleCancel(evt) {\n  evt.preventDefault();\n  //console.log(\"touchcancel.\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n    ongoingTouches.splice(idx, 1); // remove it; we're done\n  }\n}\n\nfunction startup() {\n  var el = document.getElementById(\"canvas\");\n  if (el !== null && typeof el !== \"undefined\") {\n    document.removeEventListener(\"mousemove\", startup);\n    document.removeEventListener(\"touchstart\", startup, false);\n    makepattern();\n    if (\n      el.width !== window.innerWidth ||\n      el.height !== window.innerHeight - 30\n    ) {\n      el.width = window.innerWidth.toString();\n      el.style.width = window.innerWidth;\n      el.height = (window.innerHeight - 30).toString();\n      el.style.height = window.innerHeight - 30;\n    }\n    el.addEventListener(\"touchstart\", handleStart, false);\n    el.addEventListener(\"touchend\", handleEnd, false);\n    el.addEventListener(\"touchcancel\", handleCancel, false);\n    el.addEventListener(\"touchmove\", handleMove, false);\n    //window.addEventListener(\"keydown\", onkey, false);\n    document.getElementById(\"modebutton\").addEventListener(\"click\", (evt) => {\n      var self = this.getElementById(\"modebutton\");\n      if (mode === 0) {\n        self.innerHTML = \"Erase\";\n        mode = 1;\n      } else if (mode === 1) {\n        self.innerHTML = \"Circle\";\n        mode = 2;\n      } else if (mode === 2) {\n        self.innerHTML = \"Line\";\n        mode = 3;\n      } else if (mode === 3) {\n        self.innerHTML = \"Draw\";\n        mode = 0;\n      }\n    });\n    document\n      .getElementById(\"backgroundbutton\")\n      .addEventListener(\"click\", (evt) => {\n        var self = this.getElementById(\"backgroundbutton\");\n        if (usepattern) {\n          usepattern = false;\n          self.innerHTML = \"No lines\";\n        } else {\n          usepattern = true;\n          self.innerHTML = \"Lines\";\n        }\n        clearCanvas();\n      });\n    /*document.getElementById(\"color\").addEventListener(\"click\", (evt) => {\n      var self = this.getElementById(\"color\");\n      if (colorid >= colors.length - 1) {\n        colorid = 0;\n        self.style.background = colors[0];\n      } else {\n        colorid++;\n        self.style.background = colors[colorid];\n      }\n    });*/\n  }\n}\n\ndocument.addEventListener(\"load\", () => startup);\n\ndocument.addEventListener(\"touchstart\", startup, false);\ndocument.addEventListener(\"mousemove\", startup);\n"],"names":["document","getElementById","innerHTML","$2ff1f906cd8af8d3$var$ongoingTouches","$2ff1f906cd8af8d3$var$usepattern","$2ff1f906cd8af8d3$var$mode","$2ff1f906cd8af8d3$var$touchstart","$2ff1f906cd8af8d3$var$backgroundpattern","$2ff1f906cd8af8d3$var$colorForTouch","touch","color","value","$2ff1f906cd8af8d3$var$copyTouch","identifier","pageX","pageY","$2ff1f906cd8af8d3$var$ongoingTouchIndexById","idToFind","i","length","$2ff1f906cd8af8d3$var$handleStart","evt","preventDefault","el","width","window","innerWidth","height","innerHeight","toString","style","touches","changedTouches","push","$2ff1f906cd8af8d3$var$handleMove","ctx","getContext","idx","beginPath","widthvalue","force","lineWidth","strokeStyle","lineCap","moveTo","lineTo","stroke","splice","$2ff1f906cd8af8d3$var$handleEnd","fillStyle","radius","Math","sqrt","pow","arc","PI","$2ff1f906cd8af8d3$var$handleCancel","$2ff1f906cd8af8d3$var$startup","removeEventListener","fillRect","createPattern","$2ff1f906cd8af8d3$var$makepattern","addEventListener","self","this","clearRect","$2ff1f906cd8af8d3$var$clearCanvas"],"version":3,"file":"index.a126ca57.js.map"}