{"mappings":"AAEYA,SAASC,eAAc,OAE/BC,UAAS,+NAOb,IAAIC,EAAc,YAETC,EAAOC,GACd,IAAIC,EAAKN,SAASC,eAAc,UAChCK,EAAGC,MAAQC,OAAOC,WAClBH,EAAGI,MAAMH,MAAQC,OAAOC,WACxBH,EAAGK,OAASH,OAAOI,YACnBN,EAAGI,MAAMC,OAASH,OAAOI,YAG3B,IAAIC,GAAa,EACbC,EAAO,EACPC,EAAU,GACVC,EAAU,EACVC,EAAM,0HAeNC,EAAiB,YAYZC,EAAMd,UACFA,EAAIe,aAIXN,EAAO,gBAGPA,EAAO,gBAGPA,EAAO,gBAGPA,EAAO,gBAILE,EADc,IAAZA,EACQ,EAEA,iBAIZA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,gBAGVA,EAAU,iBAGVA,EAAU,gBAGVH,GAAa,EACbQ,kBAGAR,GAAa,EACbQ,cASGA,IACP,IAAIf,EAAKN,SAASC,eAAc,UAC5BqB,EAAMhB,EAAGiB,WAAU,MACnBV,GACFS,EAAIE,UAAYN,EAChBI,EAAIG,SAAS,EAAG,EAAGnB,EAAGC,MAAOD,EAAGK,SAEhCW,EAAII,UAAU,EAAG,EAAGpB,EAAGC,MAAOD,EAAGK,iBAI5BgB,EAAcC,GACrB,IAAIC,EAWA,OAHJA,EAAQZ,EAAOD,GAIRa,WAGAC,GAASC,WAAGA,EAAUC,MAAEA,EAAKC,MAAEA,sBAC7BF,QAAYC,QAAOC,YAGrBC,EAAsBC,OACxB,IAAIC,EAAI,EAAGA,EAAIjC,EAAekC,OAAQD,IAAK,CAG9C,GAFSjC,EAAeiC,GAAGL,aAEhBI,EAAQ,OACVC,SAGJ,WAGAE,EAAYjC,GACnBA,EAAIkC,iBAEJ,IAAIjC,EAAKN,SAASC,eAAc,UAC5BK,EAAGC,QAAUC,OAAOC,YAAcH,EAAGK,SAAWH,OAAOI,cACzDN,EAAGC,MAAQC,OAAOC,WAAW+B,WAC7BlC,EAAGI,MAAMH,MAAQC,OAAOC,WACxBH,EAAGK,OAASH,OAAOI,YAAY4B,WAC/BlC,EAAGI,MAAMC,OAASH,OAAOI,iBAG3B,IAAI6B,EAAUpC,EAAIqC,eAETN,EAAI,EAAGA,EAAIK,EAAQJ,OAAQD,IAElCjC,EAAewC,KAAKb,EAAUW,EAAQL,KAEtCrB,EAAWqB,GAAKK,EAAQL,YAWnBQ,EAAWvC,GAClBA,EAAIkC,qBACJ,IACIjB,EADKtB,SAASC,eAAc,UACnBsB,WAAU,MACnBkB,EAAUpC,EAAIqC,eAETN,EAAI,EAAGA,EAAIK,EAAQJ,OAAQD,IAAK,CACvC,IAAIP,EAAQF,EAAcc,EAAQL,IAC9BS,EAAMX,EAAsBO,EAAQL,GAAGL,YAEvCc,GAAO,IAETvB,EAAIwB,YAWqB,IAArBL,EAAQL,GAAGW,MACbzB,EAAI0B,UAAY,GAEhB1B,EAAI0B,UAA+B,GAAnBP,EAAQL,GAAGW,MAE7BzB,EAAI2B,YAAcpB,EAClBP,EAAI4B,QAAO,QACE,IAATpC,GACFQ,EAAI6B,OAAOhD,EAAe0C,GAAKb,MAAO7B,EAAe0C,GAAKZ,OAC1DX,EAAI8B,OAAOX,EAAQL,GAAGJ,MAAOS,EAAQL,GAAGH,OACxCX,EAAI+B,UACc,IAATvC,IACTQ,EAAI0B,UAAY,GAEd1B,EAAI2B,YADFpC,EACgBK,EAEH,UAEjBI,EAAI6B,OAAOhD,EAAe0C,GAAKb,MAAO7B,EAAe0C,GAAKZ,OAC1DX,EAAI8B,OAAOX,EAAQL,GAAGJ,MAAOS,EAAQL,GAAGH,OACxCX,EAAI+B,UAGNlD,EAAemD,OAAOT,EAAK,EAAGf,EAAUW,EAAQL,gBAQ7CmB,EAAUlD,GACjBA,EAAIkC,qBAEJ,IACIjB,EADKtB,SAASC,eAAc,UACnBsB,WAAU,MACnBkB,EAAUpC,EAAIqC,eAETN,EAAI,EAAGA,EAAIK,EAAQJ,OAAQD,IAAK,CACvC,IAAIP,EAAQF,EAAcc,EAAQL,IAC9BS,EAAMX,EAAsBO,EAAQL,GAAGL,YAE3C,GAAIc,GAAO,EAAG,CAKZ,GAJAvB,EAAI0B,UAAY,EAChB1B,EAAIE,UAAYK,EAEhBP,EAAIwB,YACS,IAAThC,EAAY,CACd,IAAI0C,EAASC,KAAKC,KAChBD,KAAKE,IAAI5C,EAAWqB,GAAGJ,MAAQS,EAAQL,GAAGJ,MAAO,GAC/CyB,KAAKE,IAAI5C,EAAWqB,GAAGH,MAAQQ,EAAQL,GAAGH,MAAO,IAErDX,EAAIsC,IACF7C,EAAWqB,GAAGJ,MACdjB,EAAWqB,GAAGH,MACduB,EACA,EACU,EAAVC,KAAKI,IACL,GAEFvC,EAAI+B,cACc,IAATvC,IACTQ,EAAI6B,OAAOpC,EAAWqB,GAAGJ,MAAOjB,EAAWqB,GAAGH,OAC9CX,EAAI8B,OAAOX,EAAQL,GAAGJ,MAAOS,EAAQL,GAAGH,OACxCX,EAAI+B,UAGNlD,EAAemD,OAAOT,EAAK,cAOxBiB,EAAazD,GACpBA,EAAIkC,qBAEJ,IAAIE,EAAUpC,EAAIqC,eAETN,EAAI,EAAGA,EAAIK,EAAQJ,OAAQD,IAAK,CACvC,IAAIS,EAAMX,EAAsBO,EAAQL,GAAGL,YAC3C5B,EAAemD,OAAOT,EAAK,aAItBkB,IACP,IAAIzD,EAAKN,SAASC,eAAc,UAC5BK,MAAAA,IACFN,SAASgE,oBAAmB,YAAcD,GAC1C/D,SAASgE,oBAAmB,aAAeD,GAAS,cAnQtD,IAAIzD,EAAKN,SAASC,eAAc,WAC5BqB,EAAMhB,EAAGiB,WAAU,MACvBD,EAAIE,UAAS,QACbF,EAAIG,SAAS,EAAG,EAAG,GAAI,IACvBH,EAAIE,UAAS,QACbF,EAAIG,SAAS,EAAG,EAAG,GAAI,IACvBP,EAAoBI,EAAI2C,cAAc3D,EAAE,UA8PtC4D,GACA5D,EAAGC,MAAQC,OAAOC,WAClBH,EAAGI,MAAMH,MAAQC,OAAOC,WACxBH,EAAGK,OAASH,OAAOI,YACnBN,EAAGI,MAAMC,OAASH,OAAOI,YACzBN,EAAG6D,iBAAgB,aAAe7B,GAAa,GAC/ChC,EAAG6D,iBAAgB,WAAaZ,GAAW,GAC3CjD,EAAG6D,iBAAgB,cAAgBL,GAAc,GACjDxD,EAAG6D,iBAAgB,YAAcvB,GAAY,GAC7CpC,OAAO2D,iBAAgB,UAAS,IAAQ/D,IACxCI,OAAO2D,iBAAgB,UAAYhD,GAAO,IAI9CnB,SAASmE,iBAAgB,QAAO,IAAQJ,IAExC/D,SAASmE,iBAAgB,aAAeJ,GAAS,GACjD/D,SAASmE,iBAAgB,YAAcJ","sources":["src/index.js"],"sourcesContent":["import \"./styles.css\";\n\nconst app = document.getElementById(\"app\");\n\napp.innerHTML = `\n<canvas id=\"canvas\" width=\"600\" height=\"600\" style=\"border:solid black 1px;\">\n  Your browser does not support canvas elements.\n</canvas>\n<canvas id=\"pattern\" width=\"50\" height=\"50\" style=\"display: none;\"></canvas>\n`;\n\nvar ongoingTouches = [];\n\nfunction resize(evt) {\n  var el = document.getElementById(\"canvas\");\n  el.width = window.innerWidth;\n  el.style.width = window.innerWidth;\n  el.height = window.innerHeight;\n  el.style.height = window.innerHeight;\n}\n\nvar usepattern = false;\nvar mode = 0;\nvar touchstart = [];\nvar colorid = 0;\nvar colors = [\n  \"#000000\",\n  \"#888888\",\n  \"#ff0000\",\n  \"#ff8800\",\n  \"#ffff00\",\n  \"#008800\",\n  \"#00ff00\",\n  \"#00ffff\",\n  \"#0000ff\",\n  \"#8800ff\",\n  \"#ff00ff\",\n  \"#964b00\"\n];\n\nvar backgroundpattern = \"\";\n\nfunction makepattern() {\n  var el = document.getElementById(\"pattern\");\n  var ctx = el.getContext(\"2d\");\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, 50, 50);\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(1, 1, 48, 48);\n  backgroundpattern = ctx.createPattern(el, \"repeat\");\n}\n\nfunction onkey(evt) {\n  var name = evt.key;\n  //var code = evt.code;\n  switch (name) {\n    case \"e\":\n      mode = 0;\n      break;\n    case \"r\":\n      mode = 1;\n      break;\n    case \"t\":\n      mode = 2;\n      break;\n    case \"y\":\n      mode = 3;\n      break;\n    case \"1\":\n      if (colorid !== 1) {\n        colorid = 1;\n      } else {\n        colorid = 11;\n      }\n      break;\n    case \"2\":\n      colorid = 2;\n      break;\n    case \"3\":\n      colorid = 3;\n      break;\n    case \"4\":\n      colorid = 4;\n      break;\n    case \"5\":\n      colorid = 5;\n      break;\n    case \"6\":\n      colorid = 6;\n      break;\n    case \"7\":\n      colorid = 7;\n      break;\n    case \"8\":\n      colorid = 8;\n      break;\n    case \"9\":\n      colorid = 9;\n      break;\n    case \"0\":\n      colorid = 10;\n      break;\n    case \"q\":\n      colorid = 0;\n      break;\n    case \"x\":\n      usepattern = false;\n      clearCanvas();\n      break;\n    case \"z\":\n      usepattern = true;\n      clearCanvas();\n      break;\n    default:\n      break;\n  }\n  // Alert the key name and key code on keydown\n  //alert(`Key pressed ${name} \\r\\n Key code value: ${code}`);\n}\n\nfunction clearCanvas() {\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  if (usepattern) {\n    ctx.fillStyle = backgroundpattern;\n    ctx.fillRect(0, 0, el.width, el.height);\n  } else {\n    ctx.clearRect(0, 0, el.width, el.height);\n  }\n}\n\nfunction colorForTouch(touch) {\n  let color;\n  /*var r = touch.identifier % 16;\n  var g = Math.floor(touch.identifier / 3) % 16;\n  var b = Math.floor(touch.identifier / 7) % 16;\n  r = r.toString(16); // make it a hex digit\n  g = g.toString(16); // make it a hex digit\n  b = b.toString(16); // make it a hex digit\n  var color = \"#\" + r + g + b;*/\n  color = colors[colorid];\n  /*console.log(\n    \"color for touch with identifier \" + touch.identifier + \" = \" + color\n  );*/\n  return color;\n}\n\nfunction copyTouch({ identifier, pageX, pageY }) {\n  return { identifier, pageX, pageY };\n}\n\nfunction ongoingTouchIndexById(idToFind) {\n  for (var i = 0; i < ongoingTouches.length; i++) {\n    var id = ongoingTouches[i].identifier;\n\n    if (id === idToFind) {\n      return i;\n    }\n  }\n  return -1; // not found\n}\n\nfunction handleStart(evt) {\n  evt.preventDefault();\n  //console.log(\"touchstart.\");\n  var el = document.getElementById(\"canvas\");\n  if (el.width !== window.innerWidth || el.height !== window.innerHeight) {\n    el.width = window.innerWidth.toString();\n    el.style.width = window.innerWidth;\n    el.height = window.innerHeight.toString();\n    el.style.height = window.innerHeight;\n  }\n  //var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    //console.log(\"touchstart:\" + i + \"...\");\n    ongoingTouches.push(copyTouch(touches[i]));\n    //var color = colorForTouch(touches[i]);\n    touchstart[i] = touches[i];\n    /*\n    ctx.beginPath();\n    //ctx.arc(touches[i].pageX, touches[i].pageY, 4, 0, 2 * Math.PI, false); // a circle at the start\n    //ctx.fillStyle = color;\n    ctx.fill();\n    */\n    //console.log(\"touchstart:\" + i + \".\");\n  }\n}\n\nfunction handleMove(evt) {\n  evt.preventDefault();\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      //console.log(\"continuing touch \" + idx);\n      ctx.beginPath();\n      /*console.log(\n        \"ctx.moveTo(\" +\n          ongoingTouches[idx].pageX +\n          \", \" +\n          ongoingTouches[idx].pageY +\n          \");\"\n      );*/\n      /*console.log(\n        \"ctx.lineTo(\" + touches[i].pageX + \", \" + touches[i].pageY + \");\"\n      );*/\n      if (touches[i].force === 0) {\n        ctx.lineWidth = 10;\n      } else {\n        ctx.lineWidth = touches[i].force * 10;\n      }\n      ctx.strokeStyle = color;\n      ctx.lineCap = \"round\";\n      if (mode === 0) {\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      } else if (mode === 1) {\n        ctx.lineWidth = 30;\n        if (usepattern) {\n          ctx.strokeStyle = backgroundpattern;\n        } else {\n          ctx.strokeStyle = \"#ffffff\";\n        }\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      }\n\n      ongoingTouches.splice(idx, 1, copyTouch(touches[i])); // swap in the new touch record\n      //console.log(\".\");\n      /*} else {*/\n      //console.log(\"can't figure out which touch to continue\");\n    }\n  }\n}\n\nfunction handleEnd(evt) {\n  evt.preventDefault();\n  //console.log(\"touchend\");\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      ctx.lineWidth = 4;\n      ctx.fillStyle = color;\n      //ctx.fillStyle = backgroundpattern;\n      ctx.beginPath();\n      if (mode === 2) {\n        var radius = Math.sqrt(\n          Math.pow(touchstart[i].pageX - touches[i].pageX, 2) +\n            Math.pow(touchstart[i].pageY - touches[i].pageY, 2)\n        );\n        ctx.arc(\n          touchstart[i].pageX,\n          touchstart[i].pageY,\n          radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        ctx.stroke();\n      } else if (mode === 3) {\n        ctx.moveTo(touchstart[i].pageX, touchstart[i].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      }\n      //ctx.fillRect(touches[i].pageX - 4, touches[i].pageY - 4, 8, 8); // and a square at the end\n      ongoingTouches.splice(idx, 1); // remove it; we're done\n    } else {\n      //console.log(\"can't figure out which touch to end\");\n    }\n  }\n}\n\nfunction handleCancel(evt) {\n  evt.preventDefault();\n  //console.log(\"touchcancel.\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n    ongoingTouches.splice(idx, 1); // remove it; we're done\n  }\n}\n\nfunction startup() {\n  var el = document.getElementById(\"canvas\");\n  if (el !== null && typeof el !== \"undefined\") {\n    document.removeEventListener(\"mousemove\", startup);\n    document.removeEventListener(\"touchstart\", startup, false);\n    makepattern();\n    el.width = window.innerWidth;\n    el.style.width = window.innerWidth;\n    el.height = window.innerHeight;\n    el.style.height = window.innerHeight;\n    el.addEventListener(\"touchstart\", handleStart, false);\n    el.addEventListener(\"touchend\", handleEnd, false);\n    el.addEventListener(\"touchcancel\", handleCancel, false);\n    el.addEventListener(\"touchmove\", handleMove, false);\n    window.addEventListener(\"resize\", () => resize);\n    window.addEventListener(\"keydown\", onkey, false);\n  }\n}\n\ndocument.addEventListener(\"load\", () => startup);\n\ndocument.addEventListener(\"touchstart\", startup, false);\ndocument.addEventListener(\"mousemove\", startup);\n"],"names":["document","getElementById","innerHTML","$2ff1f906cd8af8d3$var$ongoingTouches","$2ff1f906cd8af8d3$var$resize","evt","el","width","window","innerWidth","style","height","innerHeight","$2ff1f906cd8af8d3$var$usepattern","$2ff1f906cd8af8d3$var$mode","$2ff1f906cd8af8d3$var$touchstart","$2ff1f906cd8af8d3$var$colorid","$2ff1f906cd8af8d3$var$colors","$2ff1f906cd8af8d3$var$backgroundpattern","$2ff1f906cd8af8d3$var$onkey","key","$2ff1f906cd8af8d3$var$clearCanvas","ctx","getContext","fillStyle","fillRect","clearRect","$2ff1f906cd8af8d3$var$colorForTouch","touch","color","$2ff1f906cd8af8d3$var$copyTouch","identifier","pageX","pageY","$2ff1f906cd8af8d3$var$ongoingTouchIndexById","idToFind","i","length","$2ff1f906cd8af8d3$var$handleStart","preventDefault","toString","touches","changedTouches","push","$2ff1f906cd8af8d3$var$handleMove","idx","beginPath","force","lineWidth","strokeStyle","lineCap","moveTo","lineTo","stroke","splice","$2ff1f906cd8af8d3$var$handleEnd","radius","Math","sqrt","pow","arc","PI","$2ff1f906cd8af8d3$var$handleCancel","$2ff1f906cd8af8d3$var$startup","removeEventListener","createPattern","$2ff1f906cd8af8d3$var$makepattern","addEventListener"],"version":3,"file":"index.8bb1acad.js.map"}